// For format details, see https://aka.ms/devcontainer.json.
{
	"name": "CUDA Dev",
	"build": {
		"dockerfile": "../Dockerfile",
	},

	// "image": "nvidia/cuda:8.0-devel-ubuntu16.04",

	"runArgs": [
		"--userns=keep-id", // uncommenting this breaks tings... sortof
		"--security-opt", "label=disable", "--hooks-dir=/usr/share/containers/oci/hooks.d", // this enables gpus in the container
	],

	// Set *default* container specific settings.json values on container create.
	"settings": {},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"nvidia.nsight-vscode-edition",
		"visualstudioexptteam.vscodeintellicode",
		"eamodio.gitlens",
		"ms-azuretools.vscode-docker",
		// "ms-vscode.cpptools-extension-pack",
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "gcc -v",

	// Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	// if using podman rootless, this isn't relevant
	// "remoteUser": "vscode",
	// "features": {
	// 	"git": "latest",
	// 	"git-lfs": "latest",
 
	// these things seem to be encouraged (or required?) to get podman to go, except that things fail with podman?

	"remoteUser": "vscode",
	"containerUser": "vscode"

	// "containerUser": "vscode",
	// "containerEnv": {
	// 	"HOME": "/home/vscode"
	// },

	// "workspaceMount": "source=${localWorkspaceFolder},target=/workspace,type=bind,Z",
	// "workspaceFolder": "/workspace",

	
}
